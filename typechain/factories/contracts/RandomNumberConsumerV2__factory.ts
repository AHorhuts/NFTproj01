/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RandomNumberConsumerV2,
  RandomNumberConsumerV2Interface,
} from "../../contracts/RandomNumberConsumerV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "ReturnedRandomness",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162000d0138038062000d018339818101604052810190620000389190620001ed565b818073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506200008d672725e0be9226d76260c01b620001a560201b60201c565b620000a9675320792e017e6b6160c01b620001a560201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050620000fc6729e402dbc30ce5a660c01b620001a560201b60201c565b8060e0818152505062000120678390cfc1d5e61d0f60c01b620001a560201b60201c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200017d67861832c196b4c09760c01b620001a560201b60201c565b8267ffffffffffffffff1660c08167ffffffffffffffff1660c01b81525050505050620002ee565b50565b600081519050620001b981620002a0565b92915050565b600081519050620001d081620002ba565b92915050565b600081519050620001e781620002d4565b92915050565b6000806000606084860312156200020957620002086200029b565b5b60006200021986828701620001d6565b93505060206200022c86828701620001a8565b92505060406200023f86828701620001bf565b9150509250925092565b6000620002568262000267565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b620002ab8162000249565b8114620002b757600080fd5b50565b620002c5816200025d565b8114620002d157600080fd5b50565b620002df8162000287565b8114620002eb57600080fd5b50565b60805160601c60a05160601c60c05160c01c60e0516109ca6200033760003960006102e501526000610306015260006102a901526000818160c7015261011b01526109ca6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631fe543e314610051578063e0c862891461006d578063e89e106a14610077578063f6eaffc814610095575b600080fd5b61006b60048036038101906100669190610602565b6100c5565b005b610075610185565b005b61007f6103a7565b60405161008c91906107db565b60405180910390f35b6100af60048036038101906100aa91906105a8565b6103ad565b6040516100bc91906107db565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017757337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161016e92919061073d565b60405180910390fd5b61018182826103d1565b5050565b610199679592ef3dce47488660c01b610473565b6101ad67d8b9ed89ac7f241b60c01b610473565b6101c167baebedcfab6c28fb60c01b610473565b6101d5671b4f586a5d4eadec60c01b610473565b6101e9677d8f618995e9638c60c01b610473565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024357600080fd5b610257670ca15751a4dea4f260c01b610473565b61026b671e525362c658b15f60c01b610473565b61027f67d8120474a2f37bc360c01b610473565b61029367b9a9ad0c853fe54a60c01b610473565b6102a767820ce6be0f25c33b60c01b610473565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006003620186a060026040518663ffffffff1660e01b815260040161034d959493929190610788565b602060405180830381600087803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f91906105d5565b600181905550565b60015481565b600081815481106103bd57600080fd5b906000526020600020016000915090505481565b6103e5675a4160754e5e076860c01b610473565b6103f9678bd58bc125a19a6560c01b610473565b806000908051906020019061040f929190610476565b506104246710a6d41b9091310c60c01b610473565b61043867ccb25e1da129133360c01b610473565b7fefb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e816040516104679190610766565b60405180910390a15050565b50565b8280548282559060005260206000209081019282156104b2579160200282015b828111156104b1578251825591602001919060010190610496565b5b5090506104bf91906104c3565b5090565b5b808211156104dc5760008160009055506001016104c4565b5090565b60006104f36104ee8461081b565b6107f6565b905080838252602082019050828560208602820111156105165761051561095d565b5b60005b85811015610546578161052c888261057e565b845260208401935060208301925050600181019050610519565b5050509392505050565b600082601f83011261056557610564610958565b5b81356105758482602086016104e0565b91505092915050565b60008135905061058d8161097d565b92915050565b6000815190506105a28161097d565b92915050565b6000602082840312156105be576105bd610967565b5b60006105cc8482850161057e565b91505092915050565b6000602082840312156105eb576105ea610967565b5b60006105f984828501610593565b91505092915050565b6000806040838503121561061957610618610967565b5b60006106278582860161057e565b925050602083013567ffffffffffffffff81111561064857610647610962565b5b61065485828601610550565b9150509250929050565b600061066a8383610701565b60208301905092915050565b61067f81610880565b82525050565b600061069082610857565b61069a818561086f565b93506106a583610847565b8060005b838110156106d65781516106bd888261065e565b97506106c883610862565b9250506001810190506106a9565b5085935050505092915050565b6106ec81610892565b82525050565b6106fb8161089c565b82525050565b61070a816108ca565b82525050565b610719816108ca565b82525050565b610728816108d4565b82525050565b610737816108e4565b82525050565b60006040820190506107526000830185610676565b61075f6020830184610676565b9392505050565b600060208201905081810360008301526107808184610685565b905092915050565b600060a08201905061079d60008301886106e3565b6107aa602083018761072e565b6107b760408301866106f2565b6107c4606083018561071f565b6107d1608083018461071f565b9695505050505050565b60006020820190506107f06000830184610710565b92915050565b6000610800610811565b905061080c82826108f8565b919050565b6000604051905090565b600067ffffffffffffffff82111561083657610835610929565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061088b826108aa565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b6109018261096c565b810181811067ffffffffffffffff821117156109205761091f610929565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610986816108ca565b811461099157600080fd5b5056fea26469706673582212204ab997a0e31af9bd4d52d5d2a410db3bb85a65af48721fa93b94b6706ace69e664736f6c63430008070033";

type RandomNumberConsumerV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomNumberConsumerV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomNumberConsumerV2__factory extends ContractFactory {
  constructor(...args: RandomNumberConsumerV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RandomNumberConsumerV2> {
    return super.deploy(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    ) as Promise<RandomNumberConsumerV2>;
  }
  override getDeployTransaction(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    );
  }
  override attach(address: string): RandomNumberConsumerV2 {
    return super.attach(address) as RandomNumberConsumerV2;
  }
  override connect(signer: Signer): RandomNumberConsumerV2__factory {
    return super.connect(signer) as RandomNumberConsumerV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberConsumerV2Interface {
    return new utils.Interface(_abi) as RandomNumberConsumerV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomNumberConsumerV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RandomNumberConsumerV2;
  }
}
