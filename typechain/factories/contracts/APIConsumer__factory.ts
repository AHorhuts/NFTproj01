/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  APIConsumer,
  APIConsumerInterface,
} from "../../contracts/APIConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_jobId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "volume",
        type: "uint256",
      },
    ],
    name: "DataFullfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestVolumeData",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "volume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260016004553480156200001657600080fd5b5060405162001de938038062001de983398181016040528101906200003c9190620003a1565b62000058670ce90878e1349f9b60c01b6200023b60201b60201c565b62000074674ce95e298c058c0c60c01b6200023b60201b60201c565b6200009067684b39a2bd26efa260c01b6200023b60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200013057620000e26706afffac72e284d060c01b6200023b60201b60201c565b620000fe67d8a0a7e87cd336b660c01b6200023b60201b60201c565b6200011a6770e22a7b27d736fc60c01b6200023b60201b60201c565b6200012a6200023e60201b60201c565b62000196565b6200014c678610842d38494d8460c01b6200023b60201b60201c565b6200016867c3fd242cefd5523460c01b6200023b60201b60201c565b6200018467c516462a1efac18760c01b6200023b60201b60201c565b6200019581620002e660201b60201c565b5b620001b2677b15d18d04f20c6e60c01b6200023b60201b60201c565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505062000205677a607e34c4d6c0d960c01b6200023b60201b60201c565b8260a081815250506200022967f9f8febd4c0e04af60c01b6200023b60201b60201c565b8160c0818152505050505050620004ae565b50565b620002e473c89bd4e1632d3a43cb03aaad5262cbe4038bc57173ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b1580156200029d57600080fd5b505afa158015620002b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d891906200036f565b620002e660201b60201c565b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000815190506200033b8162000460565b92915050565b60008151905062000352816200047a565b92915050565b600081519050620003698162000494565b92915050565b6000602082840312156200038857620003876200045b565b5b600062000398848285016200032a565b91505092915050565b60008060008060808587031215620003be57620003bd6200045b565b5b6000620003ce878288016200032a565b9450506020620003e18782880162000341565b9350506040620003f48782880162000358565b925050606062000407878288016200032a565b91505092959194509250565b6000620004208262000431565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6200046b8162000413565b81146200047757600080fd5b50565b620004858162000427565b81146200049157600080fd5b50565b6200049f8162000451565b8114620004ab57600080fd5b50565b60805160601c60a05160c051611908620004e1600039600061050f015260006102ba015260006104ed01526119086000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634357855e146100515780636021abac1461006d5780638dc654a21461008b578063c618a1e414610095575b600080fd5b61006b60048036038101906100669190611024565b6100b3565b005b610075610275565b604051610082919061123c565b60405180910390f35b61009361053a565b005b61009d610550565b6040516100aa9190611297565b60405180910390f35b6100c767a428ffbe9eb1f9fd60c01b610556565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090611277565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055807f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a26101e06772c1a77b0acbde9660c01b610556565b6101f4670fe3f196385c282460c01b610556565b610208676c012644b5c6f6cf60c01b610556565b8160068190555061022367862e7d64bfe2048460c01b610556565b610237679b38843a65410ce860c01b610556565b7f221d507243adddffe789060be0e69bff4be830996c6b265bfda5083d86f886326006546040516102689190611297565b60405180910390a1505050565b600061028b67d7b9f31242a4ab0260c01b610556565b61029f6750f0fdb525a854c960c01b610556565b6102b367d85e9206cc29763a60c01b610556565b60006102e77f000000000000000000000000000000000000000000000000000000000000000030634357855e60e01b610559565b90506102fd673bc03ec28e57bb6c60c01b610556565b6103116751296e9b0305f5a460c01b610556565b6103736040518060400160405280600381526020017f676574000000000000000000000000000000000000000000000000000000000081525060405180608001604052806049815260200161188a604991398361058a9092919063ffffffff16565b61038767482e9433aadff6f060c01b610556565b61039b67c2bf940768ee011f60c01b610556565b61041a6040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280601881526020017f5241572c4554482c5553442c564f4c554d453234484f555200000000000000008152508361058a9092919063ffffffff16565b61042e673ca20637ec3edd7e60c01b610556565b61044166a38dea781af7de60c01b610556565b6000670de0b6b3a7640000905061046267dbea18ed479ca50960c01b610556565b610476673a9f81a2a6130e3d60c01b610556565b6104c06040518060400160405280600581526020017f74696d657300000000000000000000000000000000000000000000000000000081525082846105bd9092919063ffffffff16565b6104d467896d8f928b679edd60c01b610556565b6104e86743dcca4ef7fcb78c60c01b610556565b6105337f0000000000000000000000000000000000000000000000000000000000000000837f00000000000000000000000000000000000000000000000000000000000000006105f0565b9250505090565b61054e67e301231e3b4d0e8860c01b610556565b565b60065481565b50565b610561610f31565b610569610f31565b610580858585846106bc909392919063ffffffff16565b9150509392505050565b6105a182846080015161076c90919063ffffffff16565b6105b881846080015161076c90919063ffffffff16565b505050565b6105d482846080015161076c90919063ffffffff16565b6105eb81846080015161079190919063ffffffff16565b505050565b600080600454905060018161060591906112df565b6004819055506000634042994660e01b60008087600001513089604001518760018c6080015160000151604051602401610646989796959493929190611179565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506106b18683868461083e565b925050509392505050565b6106c4610f31565b6106d485608001516101006109e2565b508385600001818152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b6107798260038351610a4c565b61078c8183610bd190919063ffffffff16565b505050565b7fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008112156107c8576107c38282610bf3565b61083a565b67ffffffffffffffff8113156107e7576107e28282610c6a565b610839565b60008112610800576107fb82600083610a4c565b610838565b610837826001837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108329190611500565b610a4c565b5b5b5b5050565b6000308460405160200161085392919061114d565b604051602081830303815290604052805190602001209050846005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea08685856040518463ffffffff1660e01b8152600401610949939291906111fe565b602060405180830381600087803b15801561096357600080fd5b505af1158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190610ff7565b6109da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d190611257565b60405180910390fd5b949350505050565b6109ea610f9e565b60006020836109f991906116e7565b14610a2557602082610a0b91906116e7565b6020610a179190611594565b82610a2291906112df565b91505b81836020018181525050604051808452600081528281016020016040525082905092915050565b60178167ffffffffffffffff1611610a8357610a7d8160058460ff16901b60ff161784610cb690919063ffffffff16565b50610bcc565b60ff8167ffffffffffffffff1611610ad957610ab2601860058460ff16901b1784610cb690919063ffffffff16565b50610ad38167ffffffffffffffff16600185610cd69092919063ffffffff16565b50610bcb565b61ffff8167ffffffffffffffff1611610b3057610b09601960058460ff16901b1784610cb690919063ffffffff16565b50610b2a8167ffffffffffffffff16600285610cd69092919063ffffffff16565b50610bca565b63ffffffff8167ffffffffffffffff1611610b8957610b62601a60058460ff16901b1784610cb690919063ffffffff16565b50610b838167ffffffffffffffff16600485610cd69092919063ffffffff16565b50610bc9565b610ba6601b60058460ff16901b1784610cb690919063ffffffff16565b50610bc78167ffffffffffffffff16600885610cd69092919063ffffffff16565b505b5b5b5b505050565b610bd9610f9e565b610beb83846000015151848551610cf8565b905092915050565b610c1160036005600660ff16901b1783610cb690919063ffffffff16565b50610c6682827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c429190611500565b604051602001610c529190611297565b604051602081830303815290604052610de7565b5050565b610c8860026005600660ff16901b1783610cb690919063ffffffff16565b50610cb28282604051602001610c9e9190611297565b604051602081830303815290604052610de7565b5050565b610cbe610f9e565b610cce8384600001515184610e0c565b905092915050565b610cde610f9e565b610cef848560000151518585610e63565b90509392505050565b610d00610f9e565b8251821115610d0e57600080fd5b84602001518285610d1f91906112df565b1115610d5457610d53856002610d4488602001518887610d3f91906112df565b610ef1565b610d4e91906114a6565b610f0d565b5b600080865180518760208301019350808887011115610d735787860182525b60208701925050505b60208410610dba5780518252602082610d9591906112df565b9150602081610da491906112df565b9050602084610db39190611594565b9350610d7c565b60006001856020036101000a03905080198251168184511681811785525050508692505050949350505050565b610df48260028351610a4c565b610e078183610bd190919063ffffffff16565b505050565b610e14610f9e565b83602001518310610e3a57610e398460028660200151610e3491906114a6565b610f0d565b5b8351805160208583010184815381861415610e56576001820183525b5050508390509392505050565b610e6b610f9e565b84602001518483610e7c91906112df565b1115610ea457610ea38560028685610e9491906112df565b610e9e91906114a6565b610f0d565b5b6000600183610100610eb69190611388565b610ec09190611594565b90508551838682010185831982511617815281518588011115610ee35784870182525b505085915050949350505050565b600081831115610f0357829050610f07565b8190505b92915050565b600082600001519050610f2083836109e2565b50610f2b8382610bd1565b50505050565b6040518060a0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001610f98610f9e565b81525090565b604051806040016040528060608152602001600081525090565b600081519050610fc781611844565b92915050565b600081359050610fdc8161185b565b92915050565b600081359050610ff181611872565b92915050565b60006020828403121561100d5761100c611776565b5b600061101b84828501610fb8565b91505092915050565b6000806040838503121561103b5761103a611776565b5b600061104985828601610fcd565b925050602061105a85828601610fe2565b9150509250929050565b61106d816115c8565b82525050565b61107c816115e6565b82525050565b61108b816115f0565b82525050565b600061109c826112b2565b6110a681856112bd565b93506110b6818560208601611686565b6110bf8161177b565b840191505092915050565b6110db6110d682611650565b6116b9565b82525050565b60006110ee6023836112ce565b91506110f9826117a6565b604082019050919050565b60006111116028836112ce565b915061111c826117f5565b604082019050919050565b61113081611646565b82525050565b61114761114282611646565b6116dd565b82525050565b600061115982856110ca565b6014820191506111698284611136565b6020820191508190509392505050565b60006101008201905061118f600083018b611064565b61119c602083018a611127565b6111a96040830189611073565b6111b66060830188611064565b6111c36080830187611082565b6111d060a0830186611127565b6111dd60c0830185611127565b81810360e08301526111ef8184611091565b90509998505050505050505050565b60006060820190506112136000830186611064565b6112206020830185611127565b81810360408301526112328184611091565b9050949350505050565b60006020820190506112516000830184611073565b92915050565b60006020820190508181036000830152611270816110e1565b9050919050565b6000602082019050818103600083015261129081611104565b9050919050565b60006020820190506112ac6000830184611127565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006112ea82611646565b91506112f583611646565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561132a57611329611718565b5b828201905092915050565b6000808291508390505b600185111561137f5780860481111561135b5761135a611718565b5b600185161561136a5780820291505b808102905061137885611799565b945061133f565b94509492505050565b600061139382611646565b915061139e83611646565b92506113cb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846113d3565b905092915050565b6000826113e3576001905061149f565b816113f1576000905061149f565b8160018114611407576002811461141157611440565b600191505061149f565b60ff84111561142357611422611718565b5b8360020a91508482111561143a57611439611718565b5b5061149f565b5060208310610133831016604e8410600b84101617156114755782820a9050838111156114705761146f611718565b5b61149f565b6114828484846001611335565b9250905081840481111561149957611498611718565b5b81810290505b9392505050565b60006114b182611646565b91506114bc83611646565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114f5576114f4611718565b5b828202905092915050565b600061150b8261161c565b91506115168361161c565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561155157611550611718565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561158957611588611718565b5b828203905092915050565b600061159f82611646565b91506115aa83611646565b9250828210156115bd576115bc611718565b5b828203905092915050565b60006115d382611626565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061165b82611662565b9050919050565b600061166d82611674565b9050919050565b600061167f82611626565b9050919050565b60005b838110156116a4578082015181840152602081019050611689565b838111156116b3576000848401525b50505050565b60006116c4826116cb565b9050919050565b60006116d68261178c565b9050919050565b6000819050919050565b60006116f282611646565b91506116fd83611646565b92508261170d5761170c611747565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160011c9050919050565b7f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160008201527f636c650000000000000000000000000000000000000000000000000000000000602082015250565b7f536f75726365206d75737420626520746865206f7261636c65206f662074686560008201527f2072657175657374000000000000000000000000000000000000000000000000602082015250565b61184d816115da565b811461185857600080fd5b50565b611864816115e6565b811461186f57600080fd5b50565b61187b81611646565b811461188657600080fd5b5056fe68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a264697066735822122065efc853ad9e0a3c29d6ddd8a67289ae2db2652ce8f57c44e016122d407075cb64736f6c63430008070033";

type APIConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: APIConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class APIConsumer__factory extends ContractFactory {
  constructor(...args: APIConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _oracle: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    _link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<APIConsumer> {
    return super.deploy(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    ) as Promise<APIConsumer>;
  }
  override getDeployTransaction(
    _oracle: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    _link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    );
  }
  override attach(address: string): APIConsumer {
    return super.attach(address) as APIConsumer;
  }
  override connect(signer: Signer): APIConsumer__factory {
    return super.connect(signer) as APIConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APIConsumerInterface {
    return new utils.Interface(_abi) as APIConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): APIConsumer {
    return new Contract(address, _abi, signerOrProvider) as APIConsumer;
  }
}
